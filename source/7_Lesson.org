#+STARTUP:indent
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+HTML_HEAD_EXTRA: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+HTML_HEAD_EXTRA: <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js" type="text/javascript"></script>
#+HTML_HEAD_EXTRA: <script src="js/navbar.js" type="text/javascript"></script>
#+OPTIONS: f:nil author:nil num:nil creator:nil timestamp:nil toc:nil html-style:nil

#+TITLE: Micro:Coda
#+AUTHOR: Stephen Brown

#+BEGIN_HTML
  <div class="github-fork-ribbon-wrapper left">
    <div class="github-fork-ribbon">
      <a href="https://github.com/stsb11/7-CS-micro">Fork me on GitHub</a>
    </div>
  </div>
<div id="stickyribbon">
    <ul>
      <li><a href="1_Lesson.html">Lesson1</a></li>
      <li><a href="2_Lesson.html">Lesson2</a></li>
      <li><a href="3_Lesson.html">Lesson3</a></li>
      <li><a href="4_Lesson.html">Lesson4</a></li>
      <li><a href="5_Lesson.html">Lesson5</a></li>
      <li><a href="6_Lesson.html">Lesson6</a></li>
      <li><a href="7_Lesson.html">Lesson7</a></li>
    </ul>
  </div>
#+END_HTML
* COMMENT Use as a template
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

** Research It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:

** Design It
:PROPERTIES:
:HTML_CONTAINER_CLASS: design
:END:

** Build It
:PROPERTIES:
:HTML_CONTAINER_CLASS: build
:END:

** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:

** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:

** Document It
:PROPERTIES:
:HTML_CONTAINER_CLASS: document
:END:

** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:

** Program It
:PROPERTIES:
:HTML_CONTAINER_CLASS: program
:END:

** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:

** Save It
:PROPERTIES:
:HTML_CONTAINER_CLASS: save
:END:

* Challenges
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
- One of the best things about your Micro:bit is the ability to dream up new things to make it do. 
- With the ability to get random numbers, use =If= statements and =While= loops, you can produce any program you want.
- Here are some challenges for you to try:

** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
- *Challenge 1:* Write an inefficient program to turn on all the LEDs, one column at a time. When they're all on, clear the display and restart. Make the program use as many lines as possible (as long as they all do something useful).
- *Challenge 2:* Write the program 1 in as few lines of code as you can, using loops.
- *Challenge 3:* Make a screensaver effect, where all the LEDs slowly fade in, then fade out again over and over. 
- *Challenge 4:* Write a dice program. When one of the buttons is pushed, a random number between 1 and 6 is shown on the screen.
- *Challenge 5:* Write a Harry Potter-style sorting hat app. When one of the buttons is pushed, a [[http://harrypotter.wikia.com/wiki/Hogwarts_Houses][house]] is chosen. Will you be in Slitherin?
- *Challenge 6:* Make a compass app that uses one of the outer-most LEDs to indicate which way North is. 
- *Challenge 7:* Make a fortune teller app. When the user pushes a button or shakes the Micro:bit, a random piece of advice is given. E.g. 'Choose Computer Science at GCSE', 'Eat more vegetables', etc.
- *Challenge 8:* Design and create a balance game. The player must keep the Micro:bit completely flat while walking around with it on their head. If it tips too far, a sad face is shown, and the gme is over. 
- *Challenge 9:* Make a variable brightness torch. Either pushing the buttons or tilting the Micro:bit forward and back should make make the LEDs come on brighter or dimmer. 
- *Challenge 10:* Pass the parcel game. Players pass the bit from one to another. Every 5-20 seconds (at random), the Micro:bit should change image and that player is out. The game then continues until there is only one player left.
- *Challenge 11:* Egg timer. Users start by choosing a time (in minutes) using the A button. The timer is started by pressing the B button. The amount of time left is shown on on the display. When the time runs out, the display changes to an image of happy face.
- *Challenge 12:* Snake game. The user tilts the Micro:bit forward, backward, left and right. As they do so, LEDs come on one by one to draw out a pattern.
[[http://www.diskus.pk/uploads/default/51/d717c2fa174c46f4.jpg]]
- This used to be a popular game on early Nokia 'phones.
- *Challenge 13:* Multiplication table generator. The user starts by using the GPIO pads 0 and 2 (it may be helpful to look again at the [[./4_Lesson.html][week 4 notes]]) to pick a times table to look at. The player can then use buttons A and B to navigate forward and backward through the times table they want to see. Reset the Micro:bit to choose a new table.
** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:
- *Silver:* Complete two code challenges from the set above, and upload your code for both to BourneToLearn.com
- *Gold:* Complete four coding challenges.
- *Platinum:* Complete six coding challenges. 
