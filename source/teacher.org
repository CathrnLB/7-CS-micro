#+STARTUP:indent
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+HTML_HEAD_EXTRA: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+HTML_HEAD_EXTRA: <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js" type="text/javascript"></script>
#+HTML_HEAD_EXTRA: <script src="js/navbar.js" type="text/javascript"></script>
#+OPTIONS: f:nil author:nil num:nil creator:nil timestamp:nil toc:nil html-style:nil

#+TITLE: Micro:bit teacher page
#+AUTHOR: Stephen Brown

#+BEGIN_HTML
  <div class="github-fork-ribbon-wrapper left">
    <div class="github-fork-ribbon">
      <a href="https://github.com/stsb11/7-CS-micro">Fork me on GitHub</a>
    </div>
  </div>
<div id="stickyribbon">
    <ul>
      <li><a href="1_Lesson.html">Week1</a></li>
      <li><a href="2_Lesson.html">Week2</a></li>
      <li><a href="3_Lesson.html">Week3</a></li>
      <li><a href="4_Lesson.html">Week4</a></li>
      <li><a href="5_Lesson.html">Week5</a></li>
      <li><a href="6_Lesson.html">Week6</a></li>
    </ul>
  </div>
#+END_HTML
* COMMENT Use as a template
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

** Research It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:

** Design It
:PROPERTIES:
:HTML_CONTAINER_CLASS: design
:END:

** Build It
:PROPERTIES:
:HTML_CONTAINER_CLASS: build
:END:

** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:

** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:

** Document It
:PROPERTIES:
:HTML_CONTAINER_CLASS: document
:END:

** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:

** Program It
:PROPERTIES:
:HTML_CONTAINER_CLASS: program
:END:

** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:

** Save It
:PROPERTIES:
:HTML_CONTAINER_CLASS: save
:END:

* Examples
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Samples
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
- Here are some pre-made apps for the Micro:bit that you can pre-load on the teacher Micro:bits to demonstrate to students.
  - [[./doc/times_tables.py][Times tables]]. The user can choose a table by holding the Micro:bit by the GND pin with one hand and tapping the 0 and 2 GPIO with the other. Once they've chosen, the A and B buttons will show that multiplication table. 
  - [[./doc/reflex.py][Reflex]]. Two players hold the Micro:bit, each poised to press either Button A or B. A 'meh' face will be shown for a random interval of time, then image will change. At this point, both players try to hit their button as quickly as possible. The player with the fastest reflexes will have their button name shown on the screen. The game restarts automatically. 
  - [[./doc/snake.py][Snake]]. The in-built accelerometer is used to 'draw' simple patterns on the LED display by tilting the device. The reset button on the back of the Micro:bit is used to reset the display.
  - [[./doc/bop-it.py][Bop-It]]. The player holds the Micro:bit in their right hand, by the GND GPIO pin. The screen will give an instruction of which button/GPIO pin to press, then the user has a little under half a second to touch it. The time available reduces after each correct answer. The score is shown when the player makes a mistake or runs out of time. The reset button on the back of the Micro:bit starts a new game. A [[./doc/bop.hex][hex version]] is also available to put straight onto the bit. 
